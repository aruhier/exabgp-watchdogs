Watchdogs for Exabgp
====================

Multiple watchdogs for [ExaBGP](https://github.com/Exa-Networks/exabgp).

Installation
------------

Install cargo through rustup.

Build the project by running:
```
cargo build --release
```

Binaries should be built in the `target/release/` directory. Each watchdog
script has its own binary.

Usage
-----

Copy the wanted built watchdogs in `/etc/exabgp`.
Then for each watchdog, declare a service in `exabgp.conf`. For example, for
a watchdog named `service-watchdog`, add this configuration:
```
process service-watchdog {
  run /etc/exabgp/service-watchdog;
  encoder json;
}
```

Then use it in your session configurations by adding:
```
api {
   processes [service-watchdog];
}
```

Watchdogs
---------

### HTTP

Check the status of an HTTP/HTTPS endpoint.

```
http-watchdog
HTTP watchdog for exabgp

USAGE:
    http-watchdog [FLAGS] [OPTIONS] <URI>

FLAGS:
        --check-status    check http status
    -h, --help            Prints help information
    -V, --version         Prints version information

OPTIONS:
        --delay <SECONDS>         delay between tests [default: 1]
        --start_script <PATH>     script to trigger when announcement starts.
        --stop_script <PATH>      script to trigger when announcement stops.
    -t, --timeout <SECONDS>       timeout for the HTTP client [default: 1]
    -n, --name <WATCHDOG_NAME>    watchdog name to print in messages [default: http]

ARGS:
    <URI>    URI to target
```


### DNS

Check the status of a dns server/resolver.

```
dns-watchdog
DNS watchdog for exabgp

USAGE:
    dns-watchdog [OPTIONS] <SERVER> <NAME> [QUERY_TYPE]

FLAGS:
    -h, --help       Prints help information
    -V, --version    Prints version information

OPTIONS:
        --attempts <ATTEMPTS>     number of attempts after considering that the DNS server is down. [default: 2]
        --delay <SECONDS>         delay between tests. [default: 1]
        --port <PORT>             dns server port. [default: 53]
        --start_script <PATH>     script to trigger when announcement starts.
        --stop_script <PATH>      script to trigger when announcement stops.
    -t, --timeout <SECONDS>       timeout for the DNS client. [default: 1]
    -n, --name <WATCHDOG_NAME>    watchdog name to print in messages. [default: dns]

ARGS:
    <SERVER>        dns server to test.
    <NAME>          resource record to look up.
    <QUERY_TYPE>    indicates what type of query is required â€” ANY, A, MX, SIG, etc. [default: A]
```
